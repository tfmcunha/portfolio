{"version":3,"sources":["components/personal.js","components/progressbar.js","components/skills.js","components/education.js","components/projects.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Personal","react_default","a","createElement","id","className","href","index_esm","target","rel","Component","ProgressBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","_this2","setTimeout","setState","props","style","padding","width","concat","label","React","Skills","skills","SkillFile","map","skill","index","components_progressbar","key","name","Education","Projects","Main","components_personal","components_skills","App","components_main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0a4091f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FaEnvelope, FaGithub, FaLinkedin, FaFreeCodeCamp } from 'react-icons/fa';\nimport '../css/personal.scss';\n\n\nclass Personal extends Component {\n\t// componentDidMount(){\n\t// \tsetTimeout(() => document.getElementById('personal').classList.add('stretch'), 1000)\n\t\t\n\t// }\n\n\trender(){\n\t  return (\n\t    <div id=\"personal\" className=\"toStretch\">\n\t    \t<p>Welcome!</p> \n\t    \t<p className=\"text-justify\">I built this page to show you some of my work as a Web Developer.</p>\n\t      \t<p>Born December 23rd, 1985</p>\n\t      \t<p>Torres Vedras, Lisbon, Portugal</p>\n\t      \t<div className=\"d-flex justify-content-around\">\n\t\t    \t<a href=\"mailto:tcunha_lp@hotmail.com\"><FaEnvelope /></a>\n\t\t    \t<a href=\"https://github.com/tfmcunha\" target=\"_blank\" rel=\"noopener noreferrer\"><FaGithub /></a>\n\t\t        <a href=\"https://www.linkedin.com/in/otiago-cunha/\" target=\"_blank\" rel=\"noopener noreferrer\"><FaLinkedin /></a>\n\t\t        <a href=\"https://www.freecodecamp.org/tfmcunha\" target=\"_blank\" rel=\"noopener noreferrer\"><FaFreeCodeCamp /></a>\n\t      \t</div>\n\t    </div>\n\t  );\n\t}  \n}\n\nexport default Personal;\n","import React from 'react';\nimport '../css/progressbar.css';\n\nclass ProgressBar extends React.Component {\n  constructor() {\n    super();\n    this.state = {value: \"\"}\n  }\n\n  componentDidMount(){\n    setTimeout(() => {\n      this.setState({\n        value: this.props.value\n      })\n    },1000)\n    \n  }\n  render(){\n    return(\n      <div style={{padding: \"5px\"}}>\n        <div className=\"progressBar\">\n          <div className=\"progressBarFill\" style={{width: `${this.state.value}%`}}>\n            <div className=\"label\">{this.props.label}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProgressBar;\n","import React, {Component} from 'react';\nimport ProgressBar from './progressbar';\nimport SkillFile from '../assets/skills.json';\n\nclass Skills extends Component {\n\tconstructor() {\n\t    super();\n\t    this.state = {\n\t      \tskills: []\n\t    }\n\t} \n\n\tcomponentDidMount() {\n    \tthis.setState({\n      \t\tskills: SkillFile\n   \t\t});      \t\t     \t    \n  \t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"box\">\n\t\t\t\t<h3>SKILLS</h3>\n\t\t\t\t{\n\t\t\t\t\tthis.state.skills.map((skill, index) => \n\t\t\t\t\t\t<ProgressBar\n\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\tvalue={skill.value}\n\t\t\t\t\t\t\tlabel={skill.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Skills;","import React from 'react';\n\nexport default function Education() {\n\treturn(\n\t\t<div className=\"box\">\n\t\t\t<h3>EDUCATION</h3>\n\t\t\t<div>\n\t\t\t\t<h6><strong>Bachelors Degree</strong></h6>\n\t\t\t\t<p>Fullstack Developer<br />\n\t\t\t\t<a href=\"https://openclassrooms.com/en/paths/104-full-stack-developer\" target=\"_blank\" rel=\"noopener noreferrer\">OpenClassrooms</a></p> \n\t\t\t</div>\n\t\t</div>\n\t);\n}","import React from 'react';\n\nexport default function Projects() {\n\treturn(\n\t\t<div className=\"box\">\n\t\t\t<h3>PROJECTS</h3>\n\t\t\t<div>\n\t\t\t\tThis portfolio is a work in progress. Meanwhile, you can check some of my work in my <a href=\"https://tfmcunha.github.io/portfolio/\" target=\"_blank\" rel=\"noopener noreferrer\">old portfolio</a>.\n\t\t\t</div>\n\t\t</div>\n\t);\n}","import React from 'react';\nimport Personal from '../components/personal';\nimport Skills from '../components/skills';\nimport Education from '../components/education';\nimport Projects from '../components/projects';\nimport '../css/main.scss';\n\nfunction Main() {\n  return (\n    <main className=\"row\">    \n    \t<header>\n    \t\t<div>TIAGO CUNHA</div>\n    \t\t<span>Web Developer</span>\n    \t</header>\t\n    \t<div className=\"col-md-3\">\n      \t\t<Personal />\n      \t</div>\n      \t<div className=\"col-md-9\">\n      \t\t<div className=\"row subcontainer pb-4\">\n      \t\t\t<div className=\"col-md-6 \">\n      \t\t\t\t<div className=\"row mt-3\">\n                <div className=\"col\">\n                  <Education />\n                </div>\n              </div>\n      \t\t\t\t<div className=\"row mt-3\">\n                <div className=\"col\">\n                  <Projects />\n                </div>\n              </div>\n      \t\t\t</div>\n      \t\t\t<div className=\"col-md-6 mt-3\">\n      \t\t\t\t<Skills />\n      \t\t\t</div>\n      \t\t</div>\n      \t</div>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport Main from './components/main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}